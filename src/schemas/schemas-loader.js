'use strict'

const fp = require('fastify-plugin')
const todoDataSchema = require('./todo/todo-data.json')
const putTodoBodySchema = require('./body/put-todo-body.json')
const getTodoQuerySchema = require('./query/get-todo-query.json')
const getTodoParamsSchema = require('./params/get-todo-param.json')
const getTodoResponseSchema = require('./response/get-todo-response.json')
const postTodoBodySchema = require('./body/post-todo-body.json')
const postTodoResponseSchema = require('./response/post-todo-response.json')
const postStatusParamSchema = require('./params/post-status-param.json')
const postStatusErrorResponseSchema = require('./response/post-status-error-response.json')
const dotEnvConfSchema = require('./dotenv/dotenv.json')
const authRegisterSchema = require('./auth/auth-register-body.json')
const authTokenResponseSchema = require('./auth/auth-token-response.json')
const authRefreshTokenHeaderSchema = require('./auth/auth-refresh-token-header.json')
const getTodosExportQuerySchema = require('./query/get-todo-query-export.json')
const importTodoFileResponseSchema = require('./response/import-todo-file-response.json')

module.exports = fp(async function schemasLoader (fastify, opts, next) {
  fastify.addSchema(getTodoQuerySchema)
  fastify.addSchema(todoDataSchema)
  fastify.addSchema(getTodoResponseSchema)
  fastify.addSchema(getTodoParamsSchema)
  fastify.addSchema(postTodoBodySchema)
  fastify.addSchema(putTodoBodySchema)
  fastify.addSchema(postTodoResponseSchema)
  fastify.addSchema(postStatusParamSchema)
  fastify.addSchema(postStatusErrorResponseSchema)
  fastify.addSchema(dotEnvConfSchema)
  fastify.addSchema(authRegisterSchema)
  fastify.addSchema(authTokenResponseSchema)
  fastify.addSchema(authRefreshTokenHeaderSchema)
  fastify.addSchema(getTodosExportQuerySchema)
  fastify.addSchema(importTodoFileResponseSchema)
  next()
})
